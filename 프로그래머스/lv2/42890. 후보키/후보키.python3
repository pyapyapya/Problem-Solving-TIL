from itertools import combinations


def solution(relation):
    answer = 0
    
    n_row = len(relation)
    n_col = len(relation[0])

    num = [i for i in range(n_col)]
    check = [False for i in range(n_col)]
    candidate_key = []
    
    for i in range(1, n_col+1):
        combination = list(combinations(num, i))
        for comb in combination:
            s = set()
            check_candidate = True
                
            for row in relation:
                key = ''
                for idx in comb:
                    key += row[idx]
                if key not in s:
                    s.add(key)
                else:
                    check_candidate = False
                    break
            if check_candidate:
                flag = True
                for key in candidate_key:
                    if set(key).issubset(comb):
                        flag = False
                        break
                if flag:
                    candidate_key.append(comb)
    return len(candidate_key)